/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */@import url("https://fonts.googleapis.com/css?family=Arimo");html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}body{max-width:1600px;width:100%;height:auto;margin:0 auto}.clearfix:after{content:'';display:block;clear:both;margin:0;padding:0}.container{max-width:1600px;margin:0 auto}@font-face{font-family:"Helvetica";src:url("../fonts/HelveticaRegular/HelveticaRegular.eot");src:url("../fonts/HelveticaRegular/HelveticaRegular.eot?#iefix") format("embedded-opentype"),url("../fonts/HelveticaRegular/HelveticaRegular.woff") format("woff"),url("../fonts/HelveticaRegular/HelveticaRegular.ttf") format("truetype");font-style:normal;font-weight:normal}.header-content{padding:0;margin:95px 262px 0 324px;vertical-align:middle}.head-info{float:left}.logo{padding:0;margin:72px 0 36px 0}.p-head{margin:0 0 26px 0}.app-list{margin:0;padding:0}.app{float:left;margin:0}.app-link{float:left;margin:0 14px 0 0;display:flex;justify-content:center;align-items:center}.phone{float:right;margin:0;padding:0;display:block}.features{margin:0;padding:0}.features-list{display:flex;margin:0;padding:0;justify-content:center}.features-item{display:flex;margin:0;padding:0;justify-content:center;list-style-type:none}.feature-one:before{margin:60px auto 30px;display:flex;justify-content:center;align-items:center}.feature-two:before{margin:60px auto 30px;display:flex;justify-content:center;align-items:center}.feature-three:before{margin:60px auto 30px;display:flex;justify-content:center;align-items:center}.feature-one{margin:0 60px}.feature-two{margin:0 60px}.feature-three{margin:0 60px}.feature-head{text-align:center}.p-feature{text-align:center}.notified{display:flex;justify-content:baseline}.notify-section{padding:60px 146px 0 209px}.notify-h{margin:0}.notify-p{margin:25px 0 30px 0}.video{padding:60px 211px 0 0;display:flex}.notify-form{display:inline-block;padding:0}.input-list{float:left;padding:0;margin:0}.input-li{float:left;padding:0;margin:0}.feedback{display:block;margin:60px auto 26px}.client-name{text-align:center;margin:0 auto}.clients{margin:30px auto}.client-list{padding:0;margin:0;display:flex;justify-content:center}.client{padding:0;margin:0 2.5px;display:flex}.client-link{margin:0;padding:0}.say-hi{margin:0;padding:0}.say-hi-header{margin:60px auto 0;text-align:center}.say-p{text-align:center;margin:21px 0 0 0}.social{margin:0;padding:0}.social-list{display:flex;justify-content:center;margin:25px auto 60px;padding:0}.social-li{display:flex;justify-content:center;align-items:center;width:34px;height:34px;margin:0 5px}.footer{margin:0;padding:0}.foot-container{padding:60px 0 54px 0}.footer-nav{padding:0;margin:0;display:flex;justify-content:center}.footer-a{margin:0 18px}.header{border-top:10px solid #2ecc71;background:url("../img/img.png");background-size:cover}.header-content{padding:0;margin:95px 262px 0 324px;vertical-align:middle}.head-info{float:left}.logo{padding:0;margin:72px 0 36px 0}.p-head{width:453px;height:59px;color:#ffffff;font-family:"Helvetica",sans-serif;font-size:24px;font-weight:500;line-height:24px}.app{list-style-type:none}.app-link{background:rgba(0,0,0,0.5);border-radius:100%;width:55px;height:55px}.win-icon{opacity:0.5}.app-link:hover{cursor:pointer;background-color:#2ecc71;transition:background-color 0.5s;color:#ffffff}.feature-one:before{content:url(../img/edit.png);background-color:#2ecc71;width:98px;height:98px;border-radius:50%}.feature-two:before{content:url(../img/star.png);background-color:#2ecc71;width:98px;height:98px;border-radius:50%}.feature-three:before{content:url(../img/world.png);background-color:#2ecc71;width:98px;height:98px;border-radius:50%}.feature-one{width:325px}.feature-two{width:325px}.feature-three{width:325px}.features{height:335px}.feature-head{font-family:"Raleway",sans-serif;height:17px;color:#222222;font-size:22px;font-weight:400;line-height:22px}.p-feature{font-family:"Helvetica",sans-serif;height:42px;color:#848484;font-size:16px;font-weight:400;line-height:26px}.notified{height:427px;background-color:#e3e3e3}.notify-section{width:50%;height:225px}.notify-h{font-family:"Raleway",sans-serif;color:#222222;font-size:22px;font-weight:400;line-height:22px}.notify-p{font-family:"Helvetica",sans-serif;width:525px;height:91px;color:#848484;font-size:16px;font-weight:400;line-height:26px}.video{width:50%;height:307px;border-radius:20px}.presentation-video{width:540px;height:307px;border:1px solid rgba(255,255,255,0);border-radius:3%}.notify-form{background-color:#ffffff;border-radius:10px 10px 10px 10px;color:#4e5159}.input-list{list-style-type:none}.input-li{list-style-type:none}.say-hi-header{color:#000000;font-family:"Raleway",sans-serif;font-size:24px;font-weight:400;line-height:24px}.say-p{color:#848484;font-family:"Helvetica",sans-serif;font-size:16px;font-weight:400;line-height:26px}.social-li{list-style-type:none;background:rgba(0,0,0,0.5);border-radius:50%}.social-li:hover{cursor:pointer;background-color:#2ecc71;transition:background-color 0.5s}.feedback{width:858px;height:47px;color:#848484;font-family:"Helvetica", sans-serif;font-size:18px;font-style:italic;line-height:30px}.client-name{color:#2e2e2e;font-family:'Raleway', serif;font-size:18px;font-weight:700;line-height:20px}.client{list-style-type:none}.client-link{height:50px;background-color:#2ecc71}.client-icon:hover{opacity:0.6}.first{box-shadow:30px 0 17px 4px rgba(255,255,255,0.75);position:relative;opacity:1}.last{box-shadow:-30px 0 17px 4px rgba(255,255,255,0.75);position:relative;opacity:1}.submit{font-family:"Raleway",sans-serif;text-decoration:none;border:1px solid #2ecc71;background-color:#2ecc71;border-radius:0 10px 10px 0;color:#ffffff;font-size:22px;font-weight:700;line-height:22px;padding:19px 40px 15px 30px;display:inline-block}.submit:hover{cursor:pointer;background-color:#2ecc71;transition:background-color 0.5s;color:#000000}.email{font-family:"Helvetica",sans-serif;text-decoration:none;border:none;background-color:transparent;border-radius:10px 0 0 10px;color:#848484;font-size:18px;font-weight:400;line-height:18px;padding:19px 40px 14px 30px;display:inline-block}.email::-webkit-input-placeholder{color:#848484;font-family:"Helvetica",sans-serif;font-size:18px}.email::-moz-placeholder{color:#848484;font-family:"Helvetica",sans-serif;font-size:18px}.email:-ms-input-placeholder{color:#848484;font-family:"Helvetica",sans-serif;font-size:18px}.email:-moz-placeholder{color:#848484;font-family:"Helvetica",sans-serif;font-size:18px}.footer{background-color:#e3e3e3}.footer-a{list-style-type:none}.footer-link{text-decoration:none;color:#848484;font-family:"Helvetica",sans-serif;font-size:16px;font-weight:400;line-height:26px}.footer-link:hover{color:#2ecc71;transition:0.5s}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
